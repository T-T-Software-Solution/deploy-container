# https://www.thadaw.com/posts/publishing-docker-image-on-git-hub-package-publicly-with-github-actions-6wrk7rh/
# https://docs.github.com/en/actions/publishing-packages/publishing-docker-images#publishing-images-to-github-packages
name: Deploy

# Configures this workflow to run every time a change is pushed to the branch called `release`.
on:
  workflow_dispatch:
    inputs:
      repository:
        description: 'Repository'
        required: true
        default: 'T-T-Software-Solution/ttss-fe-mono'
      branch:
        description: 'Branch'
        required: true
        default: 'main'
      image_name:
        description: 'Image Name'
        required: true
        default: 'ttss/backoffice'
      image_tag:
        description: 'Image Tag'
        required: true
        default: 'latest'
      working_dir:
        description: 'Working Directory'
        required: true
        default: '.'
      project_dir:
        description: 'Project Directory'
        required: true
        default: 'apps/backoffice'
      dockerfile:
        description: 'Dockerfile'
        required: true
        default: './apps/backoffice/Dockerfile'

# Defines two custom environment variables for the workflow. These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
env:
  container_registry_server: ${{ secrets.ACR_SERVER_NAME }}.azurecr.io
  container_registry_username: ${{ secrets.ACR_SERVER_NAME }}
  container_registry_password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
  container_app_revision_suffix: gh-actions-${{ github.run_id }}-${{ github.run_attempt }}

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:
  build-and-push-image:
    name: "ðŸš€ Deploy"
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     include:
    #       # Frontend Backoffice
    #       - service_name: Frontend Backoffice
    #         repository: T-T-Software-Solution/ttss-fe-mono
    #         branch: main
    #         image_name: ttss-fe-backoffice
    #         image_tag: latest
    #         working_dir: .
    #         project_dir: apps/backoffice
    #         dockerfile: ./apps/backoffice/Dockerfile
    #         container_app_name: fe-backoffice
    #         container_app_resource_group: demo-source-gen

    steps:
      - name: Set an environment variable
        run: echo "IMAGE=$container_registry_server/${{ inputs.image_name }}:${{ inputs.image_tag }}" >> $GITHUB_ENV

      - name: Running Variables
        run: |
          echo "Global Variables"
          echo "CONTAINER_REGISTRY_SERVER=$container_registry_server"
          echo "CONTAINER_REGISTRY_USERNAME=$container_registry_username"
          echo "CONTAINER_REGISTRY_PASSWORD=$container_registry_password"
          echo "CONTAINER_APP_REVISION_SUFFIX=$container_app_revision_suffix"

          echo "----------------------"
          echo "Matrix Variables"
          echo "----------------------"

          echo "IMAGE=$IMAGE"
          echo "REPOSITORY=${{ inputs.repository }}"
          echo "BRANCH=${{ inputs.branch }}"
          echo "IMAGE_NAME=${{ inputs.image_name }}"
          echo "IMAGE_TAG=${{ inputs.image_tag }}"
          echo "WORKING_DIR=${{ inputs.working_dir }}"
          echo "PROJECT_DIR=${{ inputs.project_dir }}"
          echo "DOCKERFILE=${{ inputs.dockerfile }}"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.branch }}
          token: ${{ secrets.GH_TOKEN_ORG_LEVEL_READ_WRITE_THADA_TTSS }}

      # Uses the `docker/login-action` action to log in to the Container registry registry using the account and password that will publish the packages. Once published, the packages are scoped to the account defined here.
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.container_registry_server }}
          username: ${{ env.container_registry_username }}
          password: ${{ env.container_registry_password }}

      - name: Build and publish docker image
        working-directory: ${{ inputs.working_dir }}
        shell: bash
        run: |
          docker build --build-arg PROJECT_DIR=${{ inputs.project_dir }} -t ${{ env.IMAGE }} -f ${{ inputs.dockerfile }} .
          docker push ${{ env.IMAGE }}

      # - name: Build
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: ${{ env.fe_backoffice_working_dir }}
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max
      #     file: ${{ env.fe_backoffice_dockerfile }}
      #     push: true
      #     build-args: PROJECT_DIR=${{ env.fe_backoffice_project_dir }}
      #     tags: latest