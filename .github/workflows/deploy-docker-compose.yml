name: Deploy Docker Compose
# Configures this workflow to run every time a change is pushed to the branch called `release`.
on:
  workflow_dispatch:
    inputs:
      repository:
        description: "Repository"
        required: true
        default: "T-T-Software-Solution/ttss-fe-mono"
      branch:
        description: "Branch"
        required: true
        default: "main"
      target_services:
        description: "Target Services using comma separated values, e.g. 'service1,service2'"
        required: true
        default: "backend,frontend"
      image_tag:
        description: "Image Tag"
        required: true
        default: "test-2024-01-24"
      working_dir:
        description: "Working Directory"
        required: true
        default: "."
      docker-compose-file:
        description: "Docker Compose File"
        required: true
        default: "docker-compose.yml"

jobs:
  get-matrix:
    name: "ðŸ”¨ Get Matrix"
    runs-on: ubuntu-24.04
    outputs:
      deployment-matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Install Bun Dependencies
        run: bun install

      - name: Run Bun
        id: set-matrix
        run: bun run index.ts

  build-and-push-image:
    needs: get-matrix
    name: "ðŸš€ Deploy"
    runs-on: ubuntu-24.04
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
  
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.get-matrix.outputs.deployment-matrix).docker_image }}

    steps:
      - name: Checkout Build Composite
        uses: actions/checkout@v4

      - name: Call Composite build and publish docker image
        uses: ./composite/build-and-publish-docker-image
        with:
          secrets: ${{ toJson(secrets) }}
          gh_token: ${{ secrets.GH_TOKEN_ORG_LEVEL_READ_WRITE_THADA_TTSS }}
          container_registry_server: ${{ secrets.ACR_SERVER_NAME }}.azurecr.io
          container_registry_username: ${{ secrets.ACR_SERVER_NAME }}
          container_registry_password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
          repository: ${{ matrix.repository }}
          branch: ${{ matrix.branch }}
          image_name: ${{ matrix.image_name }}
          image_tag: ${{ matrix.image_tag }}
          working_dir: ${{ matrix.working_dir }}
          build_args: ${{ matrix.build_args }}
          dockerfile: ${{ matrix.dockerfile }}